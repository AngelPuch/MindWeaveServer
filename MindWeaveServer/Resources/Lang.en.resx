<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAvatarPathCannotBeEmpty" xml:space="preserve">
    <value>Avatar path cannot be empty.</value>
  </data>
  <data name="ErrorAvatarUpdateFailed" xml:space="preserve">
    <value>An unexpected error occurred while updating the avatar path.</value>
  </data>
  <data name="ErrorPlayerNotFound" xml:space="preserve">
    <value>Player not found</value>
  </data>
  <data name="GenericServerError" xml:space="preserve">
    <value>An unexpected server error occurred.</value>
  </data>
  <data name="LoginAccountNotVerified" xml:space="preserve">
    <value>Your account has not been verified. Please check your email.</value>
  </data>
  <data name="LoginPasswordNotEmpty" xml:space="preserve">
    <value>Incorrect email or password.</value>
  </data>
  <data name="LoginSuccessful" xml:space="preserve">
    <value>Login successful.</value>
  </data>
  <data name="RegistrationSuccessful" xml:space="preserve">
    <value>Registration successful. A verification code has been sent to your email.</value>
  </data>
  <data name="RegistrationUsernameOrEmailExists" xml:space="preserve">
    <value>Username or email is already taken</value>
  </data>
  <data name="SuccessAvatarUpdated" xml:space="preserve">
    <value>Avatar updated successfully.</value>
  </data>
  <data name="ValidationDateOfBirthMinimumAge" xml:space="preserve">
    <value>You must be at least 13 years old to register.</value>
  </data>
  <data name="ValidationDateOfBirthRealistic" xml:space="preserve">
    <value>The date of birth does not seem realistic.</value>
  </data>
  <data name="ValidationDateOfBirthRequired" xml:space="preserve">
    <value>Date of birth is required.</value>
  </data>
  <data name="ValidationEmailFormat" xml:space="preserve">
    <value>The email format is invalid</value>
  </data>
  <data name="ValidationEmailRequired" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="ValidationFirstNameLength" xml:space="preserve">
    <value>First name cannot exceed 45 characters.</value>
  </data>
  <data name="ValidationFirstNameRequired" xml:space="preserve">
    <value>First name is required.</value>
  </data>
  <data name="ValidationLastNameLength" xml:space="preserve">
    <value>Last name cannot exceed 45 characters</value>
  </data>
  <data name="ValidationNoLeadingOrTrailingWhitespace" xml:space="preserve">
    <value>The field cannot start or end with spaces.</value>
  </data>
  <data name="ValidationOnlyLetters" xml:space="preserve">
    <value>This field can only contain letters.</value>
  </data>
  <data name="ValidationPasswordComplexity" xml:space="preserve">
    <value>Password must include at least one uppercase letter, one lowercase letter, and one number.</value>
  </data>
  <data name="ValidationPasswordLength" xml:space="preserve">
    <value>Password must be at least 8 characters long.</value>
  </data>
  <data name="ValidationPasswordNoSpaces" xml:space="preserve">
    <value>assword cannot contain spaces.</value>
  </data>
  <data name="ValidationPasswordRequired" xml:space="preserve">
    <value>Password cannot be empty</value>
  </data>
  <data name="ValidationProfileOrPasswordRequired" xml:space="preserve">
    <value>User profile and password are required.</value>
  </data>
  <data name="ValidationUsernameAlphanumeric" xml:space="preserve">
    <value>Username can only contain letters and numbers.</value>
  </data>
  <data name="ValidationUsernameLength" xml:space="preserve">
    <value>Username must be between 3 and 16 characters.</value>
  </data>
  <data name="ValidationUsernameRequired" xml:space="preserve">
    <value>Username cannot be empty.</value>
  </data>
  <data name="VerificationAccountAlreadyVerified" xml:space="preserve">
    <value>This account is already verified.</value>
  </data>
  <data name="VerificationCodeInvalidFormat" xml:space="preserve">
    <value>The verification code must contain 6 digits only.</value>
  </data>
  <data name="VerificationEmailAndCodeRequired" xml:space="preserve">
    <value>Email and code are required.</value>
  </data>
  <data name="VerificationEmailNotFound" xml:space="preserve">
    <value>No pending verification found for this email.</value>
  </data>
  <data name="VerificationInvalidOrExpiredCode" xml:space="preserve">
    <value>VerificationInvalidOrExpiredCode</value>
  </data>
  <data name="VerificationSuccessful" xml:space="preserve">
    <value>Account verified successfully. You can now log in.</value>
  </data>
</root>